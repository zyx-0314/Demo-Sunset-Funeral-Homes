name: ad-ci4

services:
  php:
    build:
      context: ./web-service
      dockerfile: Dockerfile
    working_dir: /var/www/html
    init: true
    volumes:
      - ./backend:/var/www/html:cached
      - /var/www/html/vendor
    environment:
      CI_ENVIRONMENT: development
    depends_on:
      mysql:
        condition: service_healthy
    # Compose Watch: sync source; rebuild on dependency updates
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /var/www/html
        - action: rebuild
          path: ./backend/composer.json
        - action: rebuild
          path: ./backend/composer.lock

  nginx:
    image: nginx:alpine
    init: true
    ports:
      - "8090:80"
    volumes:
      - ./backend:/var/www/html:ro
      - ./backend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      php:
        condition: service_started
    # Compose Watch: sync site files and reload on config change
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /var/www/html
        - action: sync+restart
          path: ./backend/nginx.conf
          target: /etc/nginx/conf.d/default.conf

  mysql:
    image: mysql:8.0
    ports:
      - "3390:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: app
      MYSQL_USER: app
      MYSQL_PASSWORD: app
    command: [ "--default-authentication-plugin=mysql_native_password" ]
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -proot || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - mysql_data:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin:latest
    profiles: [ "tools" ] # run only if you pass --profile tools
    ports:
      - "8091:80"
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: root
    depends_on:
      mysql:
        condition: service_healthy

volumes:
  mysql_data:
